name: Python Building

on:
  push:
    paths:
      - 'Test_Sock5_List.py'
      - '.github/workflows/python-build.yaml'
      - 'Get_Socks5_List.py'
  pull_request:
    paths:
      - 'Test_Sock5_List.py'
      - '.github/workflows/python-build.yaml'
      - 'Get_Socks5_List.py'
  workflow_dispatch:

jobs:
  build-socks5_proxy_tester:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2019]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Install dependencies
        run: |
          python -m pip install pyinstaller aiohttp aiohttp-socks
          
      - name: Build executable
        run: |
            pyinstaller --onefile --hidden-import aiohttp --hidden-import aiohttp-socks --hidden-import _ssl --strip --debug all Test_Sock5_List.py --distpath dist/${{ matrix.os }}
        working-directory: ${{ github.workspace }}

      - name: Upload-ubuntu-22.04
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        uses: actions/upload-artifact@v3
        with:
          name: build_Test_Sock5_List_${{ matrix.os }}_v${{ env.COMMIT_MESSAGE }}
          path: dist/ubuntu-22.04/Test_Sock5_List

      - name: Upload-windows-2019
        if: ${{ matrix.os == 'windows-2019' }}
        uses: actions/upload-artifact@v3
        with:
          name: build_Test_Sock5_List_${{ matrix.os }}_v${{ env.COMMIT_MESSAGE }}
          path: dist/windows-2019/Test_Sock5_List.exe

  build-socks5_proxy_tester_c:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2019]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Install dependencies
        run: |
          python -m pip install nuitka aiohttp aiohttp-socks

      - name: Install Dependency Walker (Windows only)
        if: runner.os == 'Windows'
        run: |
          $url = "https://dependencywalker.com/depends22_x64.zip"
          $output = "depends.zip"
          $extractPath = "C:\Users\runneradmin\AppData\Local\Nuitka\Nuitka\Cache\downloads\depends\x86_64"
          Invoke-WebRequest -Uri $url -OutFile $output
          Expand-Archive -Path $output -DestinationPath $extractPath
          Remove-Item -Path $output

      - name: Build executable with Nuitka
        run: |
          python -m nuitka --onefile --standalone Test_Sock5_List.py --output-dir=dist/${{ matrix.os }}_c

        working-directory: ${{ github.workspace }}

      - name: Upload-ubuntu-22.04
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        uses: actions/upload-artifact@v3
        with:
          name: build_Test_Sock5_List_c_${{ matrix.os }}_v${{ github.sha }}
          path: dist/ubuntu-22.04_c/Test_Sock5_List*

      - name: Upload-windows-2019
        if: ${{ matrix.os == 'windows-2019' }}
        uses: actions/upload-artifact@v3
        with:
          name: build_Test_Sock5_List_c_${{ matrix.os }}_v${{ github.sha }}
          path: dist/windows-2019_c/Test_Sock5_List.exe

  run-get_socks5_list:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Install dependencies
        run: |
          python -m pip install requests

      - name: Run Get_Socks5_List.py
        run: |
          python Get_Socks5_List.py

      - name: Compress socks5_unique.txt
        run: |
          zip socks5_unique.zip socks5_unique.txt

      - name: Upload socks5_unique.txt
        uses: actions/upload-artifact@v3
        with:
          name: socks5_unique_txt
          path: socks5_unique.txt

      - name: Upload socks5_unique.zip
        uses: actions/upload-artifact@v3
        with:
          name: socks5_unique_zip
          path: socks5_unique.zip